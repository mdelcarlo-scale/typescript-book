name: build ebook

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SHA: ${{ github.sha }}
    steps:
      # Checkout code
      - uses: actions/checkout@v3

      # Set up Node.js (latest LTS)
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'  # You can adjust this based on your requirements

      # Cache node modules
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies (including gitbook-cli)
      - run: npm install -g gitbook-cli

      # Install Calibre for ebook generation
      - run: |
          sudo apt-get update
          sudo apt-get install -y libegl1 libopengl0 libxcb-cursor-dev
          wget -qO- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin

      # Run GitBook commands
      - run: gitbook install
      - run: mkdir -p output

      - run: gitbook pdf . ./output/typescript-book-${{ env.SHA }}.pdf
      - run: gitbook epub . ./output/typescript-book-${{ env.SHA }}.epub
      - run: gitbook mobi . ./output/typescript-book-${{ env.SHA }}.mobi

      # Upload generated artifacts
      - name: upload pdf artifact
        uses: actions/upload-artifact@v3
        with:
          name: typescript-book.pdf
          path: output/typescript-book-${{ env.SHA }}.pdf

      - name: upload epub artifact
        uses: actions/upload-artifact@v3
        with:
          name: typescript-book.epub
          path: output/typescript-book-${{ env.SHA }}.epub

      - name: upload mobi artifact
        uses: actions/upload-artifact@v3
        with:
          name: typescript-book.mobi
          path: output/typescript-book-${{ env.SHA }}.mobi
